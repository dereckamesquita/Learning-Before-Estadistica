---
title: "Capitulo 2: Estadistica Descriptiva Conceptos"
author: "Dereck Amesquita"
date: "6/4/2021"
output:
  html_document: default
  pdf_document: default
---

## ¿Que es la estadistica descriptiva?
Es la rama de la estadistica que nos permite resumir un gran conjunto de datos.
"Deducir" un elemento segun un gran conjunto de elementos similares.
Con summary podremos obtener los principales datos descritivos de un dataframe

# Datos Cualitativos

```{r}
prueba=iris
summary(prueba)
```
## Frecuencias
### Frecuencia absoluta
Es el numero de datos que hay.

### Frecuencia relativa
Es el porcentaje de datos que hay
### Codigo en R
Con sample obtener 12 elementos del 40 al 55 donde los elementos se pueden repetir.
En Y estamos generando 12 elementos si y no, los cuales estan meditos en un vector y se terminaran convirtiendo en un factor, debido a eso nos arroja que hay dos niveles. 
La funcion table nos ayuda a contar los elementos que existen.
```{r Frecuencias}
x = sample(40:55, size = 12, replace=TRUE)
y = factor(sample(c("si", "no"), size=12, replace = TRUE))
x
y

```
Tambien podemos usar la funcion names que nos dara los niveles.
```{r Tabla de contigencia}
table(x)
table(y)
names(table(x))
```
Table tiene una desventaje puesto que solo aparecen los valores mayores a cero. Si nuestro datos tienen un nivel el cual no tiene ningun elemento, no se nos sera mostrado. Por lo cual podemos convertirlos a factores.
Creamos nx que recogera a x como factores con niveles del 40:55
```{r tabla de frecuencia absoluta}
nx=factor(x, levels=40:55)
table(nx)
```   
Si quisieramos encontrar un valor dentro de la tabla podemos indicarle la posicion o podemos hacer que busque.
Solo bastara con usar: 

```{r Resolver}
 table(nx)["54"]
```
Para conocer la frecuencia relativa deberemos usar prop.table. Nos da el porcenteja
```{r tabla de frecuencia relativa}
prop.table(table(nx))
prop.table(table(y))
#Si queremos obtener el porcentaje, debemos multiplicar por 100
prop.table(table(y))*100
#Tambien podemos obtener la frecuencia relativa con la division
table(y)/length(y)
```

```{r}
table(x)==2 
```
## Frecuencias Bidimensionales

Construiremos un nuevo conjunto de datos.
LO que haremos sera cruzar la informacion de Y. Con table haremos que cada "se" pueda vincularse con el valor en el orden correspondiente a "y"
```{r}
se=sample(c("H","M"), replace = TRUE, size=length(y))
table(se,y)

```


Podemos decir que 4 hombres dijeron que no, 4 mujeres dijeron que no.

### Frecuencia relativa global
Se divide cada elemento entre el total. Ejemplo 4/12 para el elemento (1,1) o 1/1
para el elemento (2,2)
 
```{r FR global}
prop.table(table(se,y))
```
El 33% del total son hombres que dijeron que no. el 25% son hombres que dijeron que si.

### Frecuencia relativa marginal

Con margin=1 obtenemos la FRM de las filas y con =2 obtenemo la FRM de las columnas
```{r FRM filas}
prop.table(table(se,y), margin=1)
```
Analizaremos por filas, es decir del total de hombres el 0.66 respondio no,
y el 0.33 respondio que si. 

```{r FRM columnas}
prop.table(table(se,y), margin=2)
```
Analizaremos por columnas, es decir de los que dijeron si, el 75% fueron hombres
y el 25% mujeres.


##Crostable

Pertenece al paquete gmodels. Crosstable nos permitira generar de forma automatica las distintas frecuencias.
```{r}
library(gmodels)
CrossTable(se,y,prop.chisq = FALSE)
fix(se)
y
rev(y)
```

## Datos multidimensionales

```{r}
#creamos los vectores
per= sample(c("S","N"), size=100, replace = TRUE)
sex= sample(c("H","M"), size=100, replace = TRUE)
lug= sample(c("Peru","Chile","Argentina","Uruguay","Brasil"), size=100, replace = TRUE)
#tablas
table(sex,per,lug)
ftable(sex,per,lug)
ftable(sex,per,lug, col.vars=c("sex","per"))

```

### Filtrado de tablas

```{r}
table(sex, per, lug)["M","S","Peru"]
#Esto nos da todas las mujeres que dijeron que si y son de Peru

table(sex, per, lug)["M",,"Peru"]
#Esto nos da todas las mujeres que son de Peru.

table(sex, per, lug)[,,"Peru"]
#Esto nos da todos lo de Peru

```

# Ejemplo 1
La siguiente base de datos ya funciona como una tabla de frecuencias, se denominan
datos agregados.
Es como si se hubiera utilizado un table(Eye,Hair,Sex)

```{r}
HairEyeColor
dfx=HairEyeColor
sum(dfx)->total

```
El total de individuos son `r total`.


```{r}
prop.table(dfx, margin=3)
```
El 11.46% de todos los hombres tiene pelo negro y ojos cafes
El 18.99% de todos los hombres tiene pelo cafe y ojos cafes.

```{r}
prop.table(dfx, margin=c(1,2))

```
De quieness tienen el cabello negro y los ojos cafes el 47.25% son hombres y el 
52.94% son mujeres.
De quienes tienen cabello cafe y ojos hazel el 46.29% son hombres y el 53.70%
son mujeres.

## Cambiar orden

```{r}
#modificar el orden de datos agregados
dfxn=aperm(dfx, perm=c("Sex", "Hair","Eye"))
#Mostrar tabla de datos agregados
library("kableExtra")

kable(dfxn)


```


# Ejemplo 2

## Arreglos importantes en R

```{r}
data="https://raw.githubusercontent.com/dereckamesquita/Learning-Before-Estadistica/main/datasets/EnergyDrink.csv"
energy=read.csv(data, sep=";",header = TRUE)
#volver una sola columna en factor
energy$estudio=as.factor(energy$estudio)
#Volver toda un data frame en factor
energy[]=lapply(energy,factor)
#Devolver a numero
energy$X=as.numeric(energy$X)
str(energy)
head(energy)
summary(energy)
colnames(energy)[colnames(energy)=="X"] = "indice"
#eliminar la columna indice
energy=energy[,2:4]
summary(energy)
```
Margin igual 2 especifica que se trabaje con las columnas. Con apply aplicaremos
la funcion a todas las columnas

```{r}
apply(energy, MARGIN = 2, FUN = table)
#Si solo queremos una columna
apply(energy, MARGIN = 2, FUN = table)$sexo
#El anterior es igual a 
table(energy$sexo)


```

```{r}
table(energy)
```


# Datos Ordinales
Son datos que presentan un orden natural. Por ejemplo las escalas.

```{r Ejercicio 1}
notas = ordered(c("S","A", "N", "Ex", "S", "S", "Ex", "Ex", "N", "A", "A", "A",
                  "A", "N", "S"), levels = c("S", "A", "N", "Ex"))
table(notas)
web = c("cir","cir","winay")
web=data.frame(web)
table(web)
```


Nos indica el número de S, A, N y Ex.

Ahora tenemos 50 clientes que calificaron nuestro producto desde el 1 al 5.
```{r Ejercicio 2}
clientes = sample(1:5, 50, replace = TRUE)
clientes
FAclientes=table(clientes)
prop.table(FAclientes)
```

## La funcion Cumsum para Acumuladas
Podemos obtener las frecuencias absolutas **acumuladas** siempre y cuando le demos a cumsum
una "table".  
```{r Obtener frecuencias}
#Para Absolutas
frecuencia_absoluta=table(notas)
cumsum(frecuencia_absoluta)#Obtenemos la acumulada
#Para relativas
frecuencia_relativa=prop.table(frecuencia_absoluta)
cumsum(frecuencia_relativa)
```

### Graficando las frecuencias con cumsum

```{r Grafico}
barplot(frecuencia_absoluta, main="Diagrama de Frecuencia Absoluta")

```  
### Ejercicio Jirafas

```{r Ejercicio 3}
#Esta es otra forma de colocar los niveles y el ordered, en el ejemplo de notas lo pusimos todo junto
longitud = sample(1:5,100, replace = TRUE)
longitud = ordered(longitud)
levels(longitud) = c("Muy.corto","Corto","Normal","Largo","Muy.largo")

#Calculamos sus frecuencias
fre_absoluta=table(longitud)
fre_relativa=prop.table(fre_absoluta)
fre_absoluta
fre_relativa
#Calcumos sus frecuencias acumuladas
fre_absol_acu=cumsum(fre_absoluta)
fre_relat_acu=cumsum(fre_relativa)
fre_absol_acu
fre_relat_acu
```

### Expansion del ejercicio jirafas
Supongamos que en el ejemplo anterior, el de las jirafas, estas provienen de 4 zonas diferentes, A,B,C y D, de manera que las 30 primeras son de la zona A, las 25 siguientes de la B, las 35 siguientes de la C y las 10 últimas de la D. Nos interesa estudiar la distribución de las longitudes según la zona.
En este caso en concreto, la sintaxis de la instrucción sería

apply(tabla, MARGIN=..., FUN=cumsum)

donde el valor MARGIN ha de ser el de la dimensión en la que queremos acumular las frecuencias: 1 si queremos hacerlo por filas, 2 para hacerlo por columnas, etc. Lo veremos todo más claro con un ejemplo
```{r Ejericio 4}
zonas=rep(c("A","B","C","D"), c(30,25,35,10))
jirafas=data.frame(zonas,longitud)
jirafas
str(jirafas)
fila_acumulada=apply(table(jirafas), MARGIN = 1, FUN = cumsum)#porfila
t(fila_acumulada)

```
COMPLETARRR

# Datos Cuantitativos
Datos para representar números de cierta medida. Estos son los mas usados.
En vez de decir que la jirafa tiene el cuello muy corto o muy largo, podriamos cuantificarla en ese caso podemos tener datos continuos para medir el cuello de la jirafa. Necesitaremos hacer uso de los estadísticos. Podemos usar todo lo que usamos en los otros tipos de datos
incluso ahora podemos trabajar por intervalos.

**Continuos**
Estos datos tienen presición infinita, todos los datos de una recta, tienen decimales, como por ejemplo el tiempo, las distancias, la altura, el peso.
**Discreto**
Solo pueden tomar números contables como tal, enteros. Ejemplo el numero de alumnos, numero de cabellos, numero de lanzamiento de una moneda.

## Frecuencia de datos cuantitativos

```{r Ejercicio 3.1}
set.seed(15)
edad=sample(10:40,20, replace = TRUE)
edad
table(edad)
```


En general, supongamos que tenemos $n$ observaciones de una propiedad que se mide con un número real y obtenemos la variable cuantitativa formada por los datos 
$$x_1,\dots, x_n$$

Sean ahora $X_1,\dots,X_k$ los valores distintos que aparecen en esta lista de datos y considerémoslos ordenados
$$X_1<X_2<\cdots<X_k$$


Entonces, en esta variable cuantitativa

- La frecuencia absoluta de $X_i$ es el número $n_i$ de elementos que son iguales a $X_i$
- La frecuencia relativa de $X_i$ es $f_i=\frac{n_i}{n}$
- La frecuencia absoluta acumulada de $X_i$ es $N_i=\sum_{j=1}^in_j$
- La frecuencia relativa acumulada de $X_i$ es $F_i=\frac{N_i}{n}$

### Ejercicio 3.2
Lanzamos 25 veces un dado de 6 caras y anotamos las puntuaciones obtenidas en cada tirada.

En este caso, $n=25$ y, los distintos valores observados son 

$$X_1 = 1,\ X_2 = 2,\ X_3 = 3,\ X_4 = 4,\ X_5 = 5,\ X_6 = 6$$

```{r Ejercicio 3.2}
set.seed(16208) #Obtenemos determinado aleatorio
dados = sample(1:6,25,replace = TRUE)
dados
set.seed(NULL) #eliminamos el control de datos
fre_absol_dados=table(dados)
frec_rel_dados=prop.table(fre_absol_dados)
fre_absol_dados 
round(frec_rel_dados,1) #Pedimos solo un decimal
cumsum(fre_absol_dados) #acumulado absoluto
cumsum(frec_rel_dados) #acumulado relativo

# Creamos un dataframe para consolidar la informacion
dados.df=data.frame(Numero=1:6,
                    FA=as.vector(fre_absol_dados),
                    FR=as.vector(frec_rel_dados),
                    FAA=as.vector(cumsum(fre_absol_dados)),
                    FRA=as.vector(cumsum(frec_rel_dados)))
str(dados.df)
```
## Medidas de tendencia central

Las medidas de tendencia central mas importantes se dividen en 3, media, mediana y moda. 

### La media
$$\bar{x} = \frac{\sum_{i=1}^nx_i}{n}=\frac{\sum_{j=1}^kn_jX_j}{n}=\sum_{j=1}^kf_jX_j$$
Se expresa como media de x igual a la sumatoria de cada elemento de x desde la posicion 1 hasta la posición n, donde se dividirá respecto a la ultima posición. Esto es igual a la multiplicación de la frecuencia absoluta por el numero de observaciones de esta, dividido entre el total. Pero recordemos:

  $$\frac{n_j}{n}=f_j$$
Por tanto podemos llegar que la sumatoria de frecuencias relativas multiplicadas por la frecuencia absoluta. Esto lo podemos entender como la multiplicacion de la frencia absoluta por su probabilidad, lo cual nos conduce a la media. En temas de estadistica inferencia se usa mas esta version.

### La mediana

Presenta el valor central cuando ordenamos las observaciones.
Si tenemos la siguiente serie ordenada de menor posicion a mayor:
$$x_{(1)}\le x_{(2)}\le\dots\le x_{(n)}$$


- Si n es par, usamos
$$\frac{x_{(\frac{n}{2})}+x_{(\frac{n}{2}+1)}}{2}$$
Si fueran 10 datos, tendremos que buscar la posicion 2.5

- Si n impar,usamos:
$x_{(\frac{n+1}{2})}$

```{r Ejercicio 3.3}
sort(edad) #Ordenamos de menor a mayor, usando FALSE podemos hacerlo decreciente
edad=sort(edad) #actualizamos el vector
#Podemos calcular la media usando la formula
mediana_edad=(edad[length(edad)/2]+edad[length(edad)/2+1])/2
mediana_edad
media_edad=sum(edad)/length(edad)
media_edad
median(edad)#Esta es la funcion que nos da la mediana
mean(edad) #Esta funcion nos da la media

```
La mediana esta entre 21 y 24 por lo cual seria 
${(\frac{20+21}{2})}=20.5$

### La moda

Es el valor que mas veces se repite.
Usando as.numeric pediremos que el valor sea considerado como un numero, which buscara que elemento de la tabla de edad es decir de los valores absolutos es igual al maximo de esos valores y nos arrojara la posicion del elemento de la tabla de edad.
```{r Ejercicio 3.4 Moda}

as.numeric(names(which(table(edad)==max(table(edad)))))
#which nos devuelve las posiciones de los valores que cumplen la condicion
z=c(1,2,2,4,2,5)
which(z==2)

```

**Media aritmética**

$$\bar{x} = \frac{1}{n}\sum_{i=1}^n x_i$$


**Media aritmética ponderada**

$$\bar{x}_w = \frac{\sum_{i=1}^nw_i\cdot x_i}{\sum_{i=1}^n w_i}$$
**Media geométrica**
Con la funcion prod podemos obtener la producctoria. Este tipo de media nos sirven para calcular el crecimiento. 
$$\bar{x}_G = \left(\prod_{i=1}^n x_i\right)^{1/n}$$

**Media armónica**

$$\bar{x}_A = \frac{n}{\sum_{i=1}^{n}\frac{1}{x_i}}$$

```{r Calculos de Media}
x=c(15,14,18,19,24,12,16,13,18,20,16)
n= length(x)
#Media Aritmetica
media_aritmetica=sum(x)/n
round(media_aritmetica,2)
#Media Aritmetica ponderada
w=c(8,5,4,6,4,8,6,1,4,2,3)
media_aritmetica_ponde=sum(x*w)/sum(w)
media_aritmetica_ponde
#Media Geometrica
media_geometrica=prod(x)^(1/n)
media_geometrica
#Media Armonica
media_armonica=n/sum(1/x)
media_armonica

```
## Medidas de posicion
Estas medidas se encargan de determinar que valores dividen las observaciones en determinadas posiciones.

```{r Ejercicio 3.5}
set.seed(15)
dado=sample(1:4, 50, replace = TRUE)
set.seed(NULL)
dado=sort(dado)
dado
#Creamos dataframe
dado.df=data.frame(puntuacion=1:4,
                   Fre.Abs=as.vector(table(dado)),
                   Fre.Rel=as.vector(prop.table(table(dado))),
                   Fre.Abs.Acu=as.vector(cumsum(table(dado))),
                   Fre.Rel.Acu=as.vector(cumsum(prop.table(table(dado)))))
dado.df

#Si queremos saber donde cae el percentil 50 podemos calcularlo mediante
dado[0.5*length(dado)]
#El Percentil 50 cae en la segunda ubicacion. Al mismo tiempo este percentil es la mediana
```
### Los cuantiles
El cuantil de orden 0,36 dejaría un 36% de valores por debajo y el cuantil de orden 0,50 se corresponde con la mediana de la distribución.
https://es.wikipedia.org/wiki/Cuantil
Los **cuartiles** son la division entre 4 del total. Tenemos $Q_{0.25},Q_{0.5}$ y $Q_{0.75}$. 

Los deciles dividen el total entre 10. $Q_p$ donde p es multiple de 0.1

Los percentiles dividen el total entre 100. El percentil 5 es el que considera al 5% de todos los datos. $Q_p$ con $p$ un múltiplo de 0.01.
El cuantil se maneja en porcentaje es decir 0.3, en percentil seria 30.

```{r Ejecicio 3.6}
set.seed(20)
dados_a=sample(1:6,50, replace = TRUE)
dados_a
set.seed(NULL)
quantile(dados_a,0.25) # Es similar a manejar percentiles/100
quantile(dados_a,0.80)
quantile(dados_a,0.45)
sort(dados_a)
```
Tenemos por debajo del 25% al 2. Es decir 2 deja por debajo al 25% de los datos.
Si ordenamos la lista, veremos que al 25% aparecen el 1 y el 2.
Debajo del 80% tenemos al 5.2. Es decir hasta el 5.2 se encuentra el 80% de los datos

## Medidas de dispersion

Estas miden que tan dispersos estan los datos.
El **rango** o recorrido de los datos es la diferencia del maximo y el minimo.
La **varianza** la mas usada en estadistica.

$\bar{x}$. $$s^2 = \frac{\sum_{j=1}^n(x_j-\bar{x})^2}{n}=\frac{\sum_{j=1}^kn_j(X_j-\bar{x})^2}{n}=\sum_{j=1}^kf_j(X_j-\bar{x})^2$$.
Al final vemos que la varianza es la frecuencia relativa multiplicada por la diferencia del valor y la media de x al cuadrado.

**La desviacion tipica**
Es la raiz cuadrada de la varianza.

**La varianza muestral**
Es la correcion de la varianza.
Esto se debe expandir en el capitulo de estadistica inferencial, puesto que cuando hacemos inferencias tratamos de descubrir valores que no conocemos. En estadistica descriptiva si trabajamos con datos completos de los cuales estimamos estadisticos que estan dentro.

$$\tilde{s}^2 = \frac{n}{n-1}s^2 = \frac{\sum_{j=1}^n(x_i-\bar{x})^2}{n-1}$$

### Propiedades de la varianza
- $s^2\ge 0$. Esto se debe a que, por definición, es una suma de cuadrados de números reales.
- $s^2 = 0\Longrightarrow x_j-\bar{x}=0\ \forall j= 1,\dots,n$. En consecuencia, si $s^2=0$, entonces todos los datos son iguales.
- $s^2 =\frac{\sum_{j=1}^nx_j^2}{n}-\bar{x}^2$. Es decir, la varianza es la media de los cuadrados de los datos menos el cuadrado de la media aritmética de estos. Esta varianza es parecida a la version que se ve en el estudio de variables aleatorias o probabilidad.


Se adjunta mediante imagen el procedimiento para llegar a la formula de la varianza con medias.

Todo lo muestras lleva la tilde.

```{r Calculo de medidas de dispercion}
set.seed(20)
prueba=sample(1:10, 50, replace = TRUE)
prueba
range(prueba) #Nos da el rango y podemos acceder al minimo y al maximo
diff(range(prueba)) # Nos da la diferencia del minimo y el maximo es decir el rango
var(prueba) #Nos da la varianza muestral
sd(prueba) # Nos da la desviacion estandar muestral
# Los valores poblacionales los podemos calcular usando las formulas
var_pob=var(prueba)*(length(prueba)-1)/length(prueba)
var_pob #Varianza poblacional
sd_pob=sd(prueba)*(length(prueba)-1)/length(prueba)
sd_pob

```














