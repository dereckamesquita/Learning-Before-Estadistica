## Dereck Amesquita Pfoccori
install.packages("PerformanceAnalytics")
install.packages("quantmod")
library(PerformanceAnalytics)
library(quantmod)
library(openxlsx)
library(dplyr)


############## Caso 1: 
##1.	Descargue los precios diarios desde el 2014 de los siguientes activos: 
#SPY, CEMB, IWM y GDX. (Utilice Yahoo Finance como fuente) 
symbols <- c("SPY","CEMB","IWM","GDX")
getSymbols(symbols, from="2014-01-01")
##2.	Calcule los retornos diarios para los cuatro activos.

ClosePrices <- do.call(merge, lapply(symbols, function(x) Cl(get(x))))

returns <- do.call(merge, lapply(ClosePrices, function(x) Return.calculate((x))))

returns <- returns[-1,]

##3.	Reporte el VaR, CVaR, Desviación Estándar y Maximun Drowdown de los 4 activos. 
##(para el periodo que abarca la información desde el 2014) 

table.DownsideRisk(returns)

## 4.	Reporte los mismos indicadores, pero para el periodo del último año (desde el 20 
#de setiembre de 2020 hasta el 20 de setiembre del 2021). 
 
table.DownsideRisk(returns["2020-09-20/2021-09-20"])
table.DownsideRisk(returns["2020-09-20/2021-09-20"])


############## Caso 2: 


german <- read.csv("tarea/german_credit.csv")


#1.	¿Cuál es la edad promedio de las personas que han sido catalogadas como aptas 
#para recibir un crédito (creditability = 1)? 

german %>%
  select(Creditability, Age..years.) %>%
  filter(Creditability == 1) %>%
  summarise(mean(Age..years.))

#2.	¿Qué porcentaje de todos los clientes tiene un garante?
german %>%
  group_by(Guarantors) %>%
  summarise(garante = n()) %>%
  mutate(porcentaje = garante / sum(garante))


#3.	En promedio, ¿Cuántos créditos tiene un cliente catalogado como apto? ¿Cuántos 
#créditos tiene un cliente catalogado como no apto?

german %>%
  select(Creditability, Payment.Status.of.Previous.Credit) %>%
  group_by(Creditability) %>%
  summarise(mean(Payment.Status.of.Previous.Credit))

#4.	¿Cuáles son los 3 propósitos más importantes de los créditos para los clientes 
#catalogados como aptos? 

german %>%
  select(Creditability, Purpose) %>%
  filter(Creditability == 1) %>%
  group_by(Purpose) %>%
  summarise(n = n()) %>%
  arrange(desc(n)) %>%
  slice(1:3)



